WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

term_final = _{ SOI ~ term ~ EOI }

term =
 _{ comment
  | id
  | true
  | string

  | foldl
  | lambda
  | map

  | param
  | result
  | resource_id

  | not
  | and
  | or
  | record_field
  | flags_get
  | int_const
  | int_add
  | int_gt
  | int_le
  | list_len
  | num_lit
  | str_at
  | u64_const
  | value_eq
  | variant_const

  | fs_file_size_get
  | fs_file_type_get
  | fs_file_type_getl

  | no_nonexistent_dir_backtrack
  }

comment = @{ ";" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }

foldl =
  { "(" ~ "@foldl"
  ~ term
  ~ term
  ~ term
  ~ ")"
  }

not = { "(" ~ "@not" ~ term ~ ")" }
and = { "(" ~ "@and" ~ term+ ~ ")" }
or = { "(" ~ "@or" ~ term+ ~ ")" }

id = @{ "$" ~ (ASCII_ALPHANUMERIC | "." | "-" | "_" | "'")+ }

true = @{ "@true" }

lambda =
  { "(" ~ "@lambda"
  ~ "(" ~ bound* ~ ")"
  ~ term
  ~ ")"
  }

map =
  { "(" ~ "@map"
  ~ term
  ~ term
  ~ ")"
  }

bound = { "(" ~ "param" ~ id ~ type_ref ~ ")" }
type_ref = _{ id | wazzi_type }
wazzi_type =
 _{ bool
  | int
  }

bool = @{ "@bool" }
int = @{ "@int" }

num_lit = @{ ASCII_DIGIT+ }

str_at = { "(" ~ "@str.at" ~ term ~ term ~ ")" }

u64_const = { "(" ~ "@u64.const" ~ term ~ ")" }

record_field = { "(" ~ "@record.field" ~ term ~ id ~ ")" }

flags_get = { "(" ~ "@flags.get" ~ term ~ id ~ ")" }

int_const = { "(" ~ "@int.const" ~ term ~ ")" }
int_add = { "(" ~ "@int.add" ~ term ~ term ~ ")" }
int_gt = { "(" ~ "@int.gt" ~ term ~ term ~ ")" }
int_le = { "(" ~ "@int.le" ~ term ~ term ~ ")" }

list_len = { "(" ~ "@list.len" ~ term ~ ")" }

param = { "(" ~ "param" ~ id ~ ")" }
result = { "(" ~ "result" ~ id ~ ")" }
resource_id = { "(" ~ "@resource-id" ~ id ~ ")" }

value_eq = { "(" ~ "@value.eq" ~ term ~ term ~ ")" }

variant_const = { "(" ~ "@variant.const" ~ id ~ id ~ term? ~ ")" }

fs_file_size_get =
  { "("
  ~ "@fs.file.size.get"
  ~ "(" ~ "param" ~ id ~ ")"
  ~ term
  ~ ")"
  }

fs_file_type_get =
  { "("
  ~ "@fs.file.type.get"
  ~ "(" ~ "param" ~ id ~ ")"
  ~ "(" ~ "param" ~ id ~ ")"
  ~ ")"
  }

fs_file_type_getl =
  { "("
  ~ "@fs.file.type.getl"
  ~ "(" ~ "param" ~ id ~ ")"
  ~ "(" ~ "param" ~ id ~ ")"
  ~ ")"
  }

no_nonexistent_dir_backtrack =
  { "("
  ~ "@no-nonexistent-dir-backtrack"
  ~ id
  ~ id
  ~ ")"
  }

string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char =
  { !("\"" | "\\") ~ ANY
  | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
  | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
  }
