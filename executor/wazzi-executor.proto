syntax = "proto3";

message Empty {}

message Request {
    message Decl {
        uint64 resource_id = 1;
        RawValue value = 2;
    }

    message Call {
        WasiFunc func = 1;
        repeated ValueSpec params = 2;
        repeated ResultSpec results = 3;
    }

    oneof which {
        Decl decl = 1;
        Call call = 2;
    }
}

message Response {
    message Decl {}

    message Call {
        ReturnValue return = 1;
        repeated ValueView params = 2;
    }

    oneof which {
        Decl decl = 1;
        Call call = 2;
    }
}

message ReturnValue {
    oneof which {
        Empty none = 1;
        int32 errno = 2;
    }
}

message ResultSpec {
    Type type = 1;

    oneof which {
        Resource resource = 2;
        Empty ignore = 3;
    }
}

enum IntRepr {
    INT_REPR_UNKNOWN = 0;
    INT_REPR_U8 = 1;
    INT_REPR_U16 = 2;
    INT_REPR_U32 = 3;
    INT_REPR_U64 = 4;
}

message Type {
    message Builtin {
        oneof which {
            Empty u8 = 1;
            Empty u32 = 3;
            Empty u64 = 4;
            Empty s64 = 8;
        }
    }

    message Bitflags {
        IntRepr repr = 1;
        repeated string members = 2;
    }

    message Array {
        Type type = 1;
        uint32 item_size = 2;
    }

    message Record {
        message Member {
            bytes name = 1;
            Type type = 2;
            uint32 offset = 3;
        }

        repeated Member members = 1;
        uint32 size = 2;
    }

    message Variant {
        message Case {
            bytes name = 1;
            
            oneof optional_type {
                Type type = 2;
            }
        }

        IntRepr tag_repr = 1;
        repeated Case cases = 2;
        uint32 payload_offset = 3;
        uint32 size = 4;
    }

    oneof which {
        Builtin builtin = 1;
        Empty string = 2;
        Bitflags bitflags = 3;
        Empty handle = 4;
        Array array = 5;
        Record record = 6;
        Type const_pointer = 7;
        Type pointer = 8;
        Variant variant = 9;
    }
}

message ValueSpec {
    Type type = 3;

    oneof which {
        Resource resource = 1;
        RawValue raw_value = 2;
    }
}

message Resource {
    uint64 id = 1;
}

message RawValue {
    message Builtin {
        oneof which {
            uint32 u8 = 1;
            uint32 u32 = 3;
            uint64 u64 = 4;
            sint64 s64 = 8;
        }
    }

    message Bitflags {
        repeated bool members = 1;
    }

    message Handle {
        uint32 value = 1;
    }

    message Array {
        repeated ValueSpec items = 1;
    }

    message Record {
        message Member {
            bytes name = 1;
            ValueSpec value = 2;
        }

        repeated Member members = 1;
    }

    message ConstPointer {
        repeated ValueSpec items = 1;
    }

    message Pointer {
        ValueSpec alloc = 1;
    }

    message Variant {
        uint32 case_idx = 1;
        bytes case_name = 2;

        oneof optional_payload {
            ValueSpec payload = 3;
        }
    }

    oneof which {
        Builtin builtin = 1;
        bytes string = 2;
        Bitflags bitflags = 3;
        Handle  handle = 4;
        Array array = 5;
        Record record = 6;
        ConstPointer const_pointer = 7;
        Pointer pointer = 8;
        Variant variant = 9;
    }
}

message ValueView {
    uint32 memory_offset = 1;
    PureValue content = 2;
}

message PureValue {
    message List {
        repeated ValueView items = 1;
    }

    message Record {
        message Member {
            bytes name = 1;
            ValueView value = 2;
        }

        repeated Member members = 1;
    }

    message Pointer {
        repeated ValueView items = 1;
    }

    oneof which {
        RawValue.Builtin builtin = 1;
        uint32 handle = 4;
        List list = 5;
        Record record = 6;
        Pointer pointer = 8;
    }
}

enum WasiFunc {
    WASI_FUNC_UNKNOWN = 0;
    WASI_FUNC_ARGS_GET             = 1;
    WASI_FUNC_ARGS_SIZES_GET       = 2;
    WASI_FUNC_ENVIRON_GET          = 3;
    WASI_FUNC_ENVIRON_SIZES_GET    = 4;
    WASI_FUNC_CLOCK_RES_GET        = 5;
    WASI_FUNC_CLOCK_TIME_GET       = 6;
    WASI_FUNC_FD_ADVISE            = 7;
    WASI_FUNC_FD_ALLOCATE          = 8;
    WASI_FUNC_FD_CLOSE             = 9;
    WASI_FUNC_FD_DATASYNC          = 10;
    WASI_FUNC_FD_FDSTAT_GET        = 11;
    WASI_FUNC_FD_FDSTAT_SET_FLAGS  = 12;
    WASI_FUNC_FD_FDSTAT_SET_RIGHTS = 13;
    WASI_FUNC_FD_READ              = 25;
    WASI_FUNC_FD_SEEK              = 26;
    WASI_FUNC_FD_WRITE             = 27;
    WASI_FUNC_PATH_OPEN            = 32;
}
