(module $wasi_snapshot_preview1
  (typename $errno
    (enum (@witx tag u16)
      $success
      $2big
      $acces
      $addrinuse
      $addrnotavail
      $afnosupport
      $again
      $already
      $badf
      $badmsg
      $busy
      $canceled
      $child
      $connaborted
      $connrefused
      $connreset
      $deadlk
      $destaddrreq
      $dom
      $dquot
      $exist
      $fault
      $fbig
      $hostunreach
      $idrm
      $ilseq
      $inprogress
      $intr
      $inval
      $io
      $isconn
      $isdir
      $loop
      $mfile
      $mlink
      $msgsize
      $multihop
      $nametoolong
      $netdown
      $netreset
      $netunreach
      $nfile
      $nobufs
      $nodev
      $noent
      $noexec
      $nolck
      $nolink
      $nomem
      $nomsg
      $noprotoopt
      $nospc
      $nosys
      $notconn
      $notdir
      $notempty
      $notrecoverable
      $notsock
      $notsup
      $notty
      $nxio
      $overflow
      $ownerdead
      $perm
      $pipe
      $proto
      $protonosupport
      $prototype
      $range
      $rofs
      $spipe
      $srch
      $stale
      $timedout
      $txtbsy
      $xdev
      $notcapable
    )
  )

  (typename $size u32)

  (typename $filesize u64)

  (typename $fd (handle))

  (typename $fdflags
    (flags (@witx repr u16)
      $append
      $dsync
      $nonblock
      $rsync
      $sync
    )
  )

  (typename $file_offset u64)

  (typename $lookupflags
    (flags (@witx repr u32)
      $symlink_follow
    )
  )

  (typename $oflags
    (flags (@witx repr u16)
      $creat
      $directory
      $excl
      $trunc
    )
  )

  (typename $path string)

  (typename $rights
    (flags (@witx repr u64)
      $fd_datasync
      $fd_read
      $fd_seek
      $fd_fdstat_set_flags
      $fd_sync
      $fd_tell
      $fd_write
      $fd_advise
      $fd_allocate
      $path_create_directory
      $path_create_file
      $path_link_source
      $path_link_target
      $path_open
      $fd_readdir
      $path_readlink
      $path_rename_source
      $path_rename_target
      $path_filestat_get
      $path_filestat_set_size
      $path_filestat_set_times
      $fd_filestat_get
      $fd_filestat_set_size
      $fd_filestat_set_times
      $path_symlink
      $path_remove_directory
      $path_unlink_file
      $poll_fd_readwrite
      $sock_shutdown
      $sock_accept
    )
  )

  (typename $advice
    (enum (@witx tag u8)
      $normal
      $sequential
      $random
      $willneed
      $dontneed
      $noreuse
    )
  )

  (@interface func (export "fd_advise")
    (param $fd $fd)
    (param $offset $filesize)
    (param $len $filesize)
    (param $advice $advice)
    (result $error (expected (error $errno)))
  )

  (@interface func (export "fd_allocate")
    (param $fd $fd)
    (param $offset $filesize)
    (param $len $filesize)
    (result $error (expected (error $errno)))
  )

  (@interface func (export "fd_datasync")
    (param $fd $fd)
    (result $error (expected (error $errno)))
  )

  (typename $filetype
    (enum (@witx tag u8)
      $unknown
      $block_device
      $character_device
      $directory
      $regular_file
      $socket_dgram
      $socket_stream
      $symbolic_link
    )
  )

  (typename $fdstat
    (record
      (field $fs_filetype $filetype)
      (field $fs_flags $fdflags)
      (field $fs_rights_base $rights)
      (field $fs_rights_inheriting $rights)
    )
  )

  (@interface func (export "fd_fdstat_get")
    (param $fd $fd)
    (result $error (expected $fdstat (error $errno)))
  )

  (@interface func (export "fd_fdstat_set_flags")
    (param $fd $fd)
    (param $flags $fdflags)
    (result $error (expected (error $errno)))
  )

  (@interface func (export "fd_fdstat_set_rights")
    (param $fd $fd)
    (param $fs_rights_base $rights)
    (param $fs_rights_inheriting $rights)
    (result $error (expected (error $errno)))
  )

  (typename $timestamp u64)
  (typename $device u64)
  (typename $inode u64)
  (typename $linkcount u64)

  (typename $filestat
    (record
      (field $dev $device)
      (field $ino $inode)
      (field $filetype $filetype)
      (field $nlink $linkcount)
      (field $size $filesize)
      (field $atim $timestamp)
      (field $mtim $timestamp)
      (field $ctim $timestamp)
    )
  )

  (@interface func (export "fd_filestat_get")
    (param $fd $fd)
    (result $error (expected $filestat (error $errno)))
  )

  (@interface func (export "fd_filestat_set_size")
    (param $fd $fd)
    (param $size $filesize)
    (result $error (expected (error $errno)))
  )

  (typename $fstflags
    (flags (@witx repr u16)
      $atim
      $atim_now
      $mtim
      $mtim_now
    )
  )

  (@interface func (export "fd_filestat_set_times")
    (param $fd $fd)
    (param $atim $timestamp)
    (param $mtim $timestamp)
    (param $fst_flags $fstflags)
    (result $error (expected (error $errno)))
  )

  (@interface func (export "fd_pread")
    (param $fd $fd)
    (param $iovs $iovec_array)
    (param $offset $filesize)
    (result $error (expected $size (error $errno)))
  )

  (typename $preopentype
    (enum (@witx tag u8)
      $dir
    )
  )

  (typename $prestat_dir
    (record
      (field $pr_name_len $size)
    )
  )

  (typename $prestat
    (union (@witx tag $preopentype)
      $prestat_dir
    )
  )

  (@interface func (export "fd_prestat_get")
    (param $fd $fd)
    (result $error (expected $prestat (error $errno)))
  )

  (@interface func (export "fd_prestat_dir_name")
    (param $fd $fd)
    (param $path (list u8))
    (result $error (expected (error $errno)))
  )

  (@interface func (export "fd_pwrite")
    (param $fd $fd)
    (param $iovs $ciovec_array)
    (param $offset $filesize)
    (result $error (expected $size (error $errno)))
  )

  (@interface func (export "fd_tell")
    (param $fd $fd)
    (result $error (expected $file_offset (error $errno)))
  )

  (typename $filedelta s64)

  (typename $whence
    (enum (@witx tag u8)
      $set
      $cur
      $end
    )
  )

  (typename $iovec
    (record
      (field $buf (list u8))
    )
  )
  (typename $iovec_array (list $iovec))

  (@interface func (export "fd_read")
    (param $fd $fd)
    (param $iovs $iovec_array)
    (result $error (expected $size (error $errno)))
  )

  (typename $dircookie u64)

  (@interface func (export "fd_readdir")
    (param $fd $fd)
    (param $buf (list u8))
    (param $cookie $dircookie)
    (result $error (expected $size (error $errno)))
  )

  (@interface func (export "fd_seek")
    (param $fd $fd (@state write))
    (param $offset $filedelta)
    (param $whence $whence)
    (result $error (expected $filesize (error $errno)))
  )

  (typename $ciovec
    (record
      (field $buf (list u8))
    )
  )
  (typename $ciovec_array (list $ciovec))

  (@interface func (export "fd_write")
    (param $fd $fd)
    (param $iovs $ciovec_array)
    (result $error (expected $size (error $errno)))
  )

  (@interface func (export "path_open")
    (param $fd $fd)
    (param $dirflags $lookupflags)
    (param $path $path)
    (param $oflags $oflags)
    (param $fs_rights_base $rights)
    (param $fs_rights_inheriting $rights)
    (param $fdflags $fdflags)
    (result $error (expected $fd (error $errno)))
  )
)
